<html><head><base href="https://imdb-clone.websim.app/que%20tenga%20men%C3%BA%20de%20b%C3%BAsqueda%20y%20categor%C3%ADas,%20y%20que%20las%20pel%C3%ADculas%20se%20puedan%20reproducir%20en%20l%C3%ADnea">
<title>MovHub Streaming App</title>
<style>
  body {
    font-family: 'Roboto', sans-serif;
    margin: 0;
    padding: 0;
    background-color: #141414;
    color: #ffffff;
  }
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
  }
  .header {
    background-color: #000000;
    padding: 20px 0;
    position: sticky;
    top: 0;
    z-index: 100;
  }
  .header-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }
  .logo {
    font-size: 24px;
    font-weight: bold;
    color: #e50914;
    cursor: pointer;
  }
  .search-bar {
    display: flex;
    align-items: center;
  }
  .search-input {
    padding: 10px;
    border: none;
    border-radius: 4px 0 0 4px;
    width: 300px;
  }
  .search-button, .home-button {
    background-color: #e50914;
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 4px;
    cursor: pointer;
    margin-left: 10px;
  }
  .search-button {
    border-radius: 0 4px 4px 0;
    margin-left: 0;
  }
  .movie-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 20px;
    margin-top: 20px;
  }
  .movie-card {
    background-color: #2f2f2f;
    border-radius: 8px;
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    cursor: pointer;
  }
  .movie-card:hover {
    transform: scale(1.05);
    box-shadow: 0 10px 20px rgba(0,0,0,0.3);
  }
  .movie-poster {
    width: 100%;
    height: 300px;
    object-fit: cover;
  }
  .movie-info {
    padding: 15px;
  }
  .movie-title {
    font-size: 16px;
    font-weight: bold;
    margin-bottom: 5px;
  }
  .modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0,0,0,0.9);
  }
  .modal-content {
    background-color: #181818;
    margin: 5% auto;
    padding: 20px;
    border-radius: 8px;
    max-width: 800px;
    width: 90%;
  }
  .close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
    cursor: pointer;
  }
  .close:hover,
  .close:focus {
    color: #fff;
    text-decoration: none;
    cursor: pointer;
  }
  .video-container {
    position: relative;
    padding-bottom: 56.25%;
    height: 0;
    overflow: hidden;
  }
  .video-container video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  .movie-details {
    margin-top: 20px;
  }
  .movie-details h2 {
    margin-bottom: 10px;
  }
  .movie-details p {
    margin-bottom: 5px;
  }
  .watch-button {
    background-color: #e50914;
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 4px;
    cursor: pointer;
    font-size: 16px;
    margin-top: 10px;
  }
  .new-tag {
    position: absolute;
    top: 10px;
    right: 10px;
    background-color: #e50914;
    color: white;
    padding: 5px 10px;
    border-radius: 4px;
    font-size: 12px;
    font-weight: bold;
  }
</style>
</head>
<body>
  <header class="header">
    <div class="header-content">
      <div class="logo" onclick="goHome()">MovHub</div>
      <div class="search-bar">
        <input type="text" class="search-input" placeholder="Search for movies...">
        <button class="search-button">Search</button>
        <button class="home-button" onclick="goHome()">Home</button>
      </div>
    </div>
  </header>
  
  <div class="container">
    <div class="movie-grid" id="movieGrid"></div>
  </div>

  <div id="movieModal" class="modal">
    <div class="modal-content">
      <span class="close">&times;</span>
      <div class="video-container">
        <video id="moviePlayer" controls>
          <source src="" type="video/mp4">
          Your browser does not support the video tag.
        </video>
      </div>
      <div class="movie-details" id="movieDetails"></div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script>
    let movies = [];
    let lastFetchTime = localStorage.getItem('lastFetchTime') ? new Date(localStorage.getItem('lastFetchTime')) : null;

    async function fetchMovies() {
      try {
        const response = await axios.get('https://raw.githubusercontent.com/DanielRv555/Divertulua/main/Peliculasmovhub');
        const m3uContent = response.data;
        const newMovies = parseM3U(m3uContent);
        
        if (lastFetchTime) {
          const currentTime = new Date();
          newMovies.forEach(movie => {
            movie.isNew = true;
          });
          
          movies = movies.concat(newMovies.filter(newMovie => 
            !movies.some(existingMovie => existingMovie.url === newMovie.url)
          ));
        } else {
          movies = newMovies;
        }
        
        lastFetchTime = new Date();
        localStorage.setItem('lastFetchTime', lastFetchTime.toISOString());
        localStorage.setItem('movies', JSON.stringify(movies));
        
        displayMovies(movies);
      } catch (error) {
        console.error('Error fetching movies:', error);
      }
    }

    function parseM3U(content) {
      const lines = content.split('\n');
      const parsedMovies = [];
      let currentMovie = {};

      for (let i = 1; i < lines.length; i++) {
        const line = lines[i].trim();
        if (line.startsWith('#EXTINF:')) {
          const titleMatch = line.match(/,(.+)$/);
          const logoMatch = line.match(/tvg-logo="([^"]+)"/);
          currentMovie = {
            title: titleMatch ? titleMatch[1].trim() : 'Unknown Title',
            poster: logoMatch ? logoMatch[1] : 'https://via.placeholder.com/300x450.png?text=No+Poster',
            isNew: false
          };
        } else if (line.startsWith('http')) {
          currentMovie.url = line;
          parsedMovies.push(currentMovie);
          currentMovie = {};
        }
      }

      return parsedMovies;
    }

    function displayMovies(moviesToShow) {
      const movieGrid = document.getElementById('movieGrid');
      movieGrid.innerHTML = '';
      moviesToShow.forEach(movie => {
        const movieCard = document.createElement('div');
        movieCard.classList.add('movie-card');
        movieCard.innerHTML = `
          <img src="${movie.poster}" alt="${movie.title} poster" class="movie-poster">
          <div class="movie-info">
            <div class="movie-title">${movie.title}</div>
          </div>
          ${movie.isNew ? '<span class="new-tag">NEW</span>' : ''}
        `;
        movieCard.addEventListener('click', () => openMovieModal(movie));
        movieGrid.appendChild(movieCard);
      });
    }

    function openMovieModal(movie) {
      const modal = document.getElementById('movieModal');
      const moviePlayer = document.getElementById('moviePlayer');
      const movieDetails = document.getElementById('movieDetails');

      moviePlayer.src = movie.url;
      movieDetails.innerHTML = `
        <h2>${movie.title}</h2>
        <button class="watch-button" onclick="playMovie('${movie.url}')">Watch Now</button>
      `;

      modal.style.display = 'block';
    }

    function playMovie(url) {
      const moviePlayer = document.getElementById('moviePlayer');
      moviePlayer.src = url;
      moviePlayer.play();
    }

    // Search functionality
    const searchInput = document.querySelector('.search-input');
    const searchButton = document.querySelector('.search-button');

    function searchMovies(query) {
      const filteredMovies = movies.filter(movie => 
        movie.title.toLowerCase().includes(query.toLowerCase())
      );
      displayMovies(filteredMovies);
    }

    searchButton.addEventListener('click', () => {
      const query = searchInput.value.trim();
      if (query) {
        searchMovies(query);
      }
    });

    searchInput.addEventListener('keypress', (e) => {
      if (e.key === 'Enter') {
        const query = searchInput.value.trim();
        if (query) {
          searchMovies(query);
        }
      }
    });

    // Modal close functionality
    const modal = document.getElementById('movieModal');
    const closeBtn = document.getElementsByClassName('close')[0];
    const moviePlayer = document.getElementById('moviePlayer');

    closeBtn.onclick = function() {
      modal.style.display = 'none';
      moviePlayer.pause();
      moviePlayer.src = '';
    }

    window.onclick = function(event) {
      if (event.target == modal) {
        modal.style.display = 'none';
        moviePlayer.pause();
        moviePlayer.src = '';
      }
    }

    // Home button functionality
    function goHome() {
      displayMovies(movies);
      searchInput.value = '';
    }

    // Initial load
    window.addEventListener('load', () => {
      const storedMovies = localStorage.getItem('movies');
      if (storedMovies) {
        movies = JSON.parse(storedMovies);
        displayMovies(movies);
      }
      fetchMovies();
    });

    // Fetch new movies every hour
    setInterval(fetchMovies, 3600000);
  </script>
</body></html>
